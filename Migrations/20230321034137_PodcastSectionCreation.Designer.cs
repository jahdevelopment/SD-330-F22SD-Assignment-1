// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SD_330_F22SD_Assignment_1.Data;

#nullable disable

namespace SD_330_F22SD_Assignment_1.Migrations
{
    [DbContext(typeof(SpotifyContext))]
    [Migration("20230321034137_PodcastSectionCreation")]
    partial class PodcastSectionCreation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SD_330_F22SD_Assignment_1.Models.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Album");
                });

            modelBuilder.Entity("SD_330_F22SD_Assignment_1.Models.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Artist");
                });

            modelBuilder.Entity("SD_330_F22SD_Assignment_1.Models.ArtistSong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<int>("SongId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.HasIndex("SongId");

                    b.ToTable("ArtistSong");
                });

            modelBuilder.Entity("SD_330_F22SD_Assignment_1.Models.Episode", b =>
                {
                    b.Property<int>("EpisodeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EpisodeId"));

                    b.Property<DateTime>("AirDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<int>("PodcastId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("EpisodeId");

                    b.HasIndex("PodcastId");

                    b.ToTable("Episode");
                });

            modelBuilder.Entity("SD_330_F22SD_Assignment_1.Models.GuestArtist", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<int>("EpisodeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EpisodeId");

                    b.ToTable("GuestArtist");
                });

            modelBuilder.Entity("SD_330_F22SD_Assignment_1.Models.ListenersList", b =>
                {
                    b.Property<int>("ListenersListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ListenersListId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ListenersListId");

                    b.ToTable("ListenersList");
                });

            modelBuilder.Entity("SD_330_F22SD_Assignment_1.Models.ListenersListPodcast", b =>
                {
                    b.Property<int>("ListenersListPodcastId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ListenersListPodcastId"));

                    b.Property<int>("ListenersListId")
                        .HasColumnType("int");

                    b.HasKey("ListenersListPodcastId");

                    b.HasIndex("ListenersListId");

                    b.ToTable("ListenersListPodcast");
                });

            modelBuilder.Entity("SD_330_F22SD_Assignment_1.Models.Playlist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Playlist");
                });

            modelBuilder.Entity("SD_330_F22SD_Assignment_1.Models.PlaylistSong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PlaylistId")
                        .HasColumnType("int");

                    b.Property<int>("SongId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlaylistId");

                    b.HasIndex("SongId");

                    b.ToTable("PlaylistSong");
                });

            modelBuilder.Entity("SD_330_F22SD_Assignment_1.Models.Podcast", b =>
                {
                    b.Property<int>("PodcastId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PodcastId"));

                    b.Property<int>("ListenersListPodcastId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PodcastId");

                    b.HasIndex("ListenersListPodcastId");

                    b.ToTable("Podcast");
                });

            modelBuilder.Entity("SD_330_F22SD_Assignment_1.Models.PodcastArtist", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<int>("PodcastId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PodcastId");

                    b.ToTable("PodcastArtist");
                });

            modelBuilder.Entity("SD_330_F22SD_Assignment_1.Models.Song", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlbumId")
                        .HasColumnType("int");

                    b.Property<int>("DurationSeconds")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.ToTable("Song");
                });

            modelBuilder.Entity("SD_330_F22SD_Assignment_1.Models.ArtistSong", b =>
                {
                    b.HasOne("SD_330_F22SD_Assignment_1.Models.Artist", "Artist")
                        .WithMany("ArtistSongs")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SD_330_F22SD_Assignment_1.Models.Song", "Song")
                        .WithMany()
                        .HasForeignKey("SongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Song");
                });

            modelBuilder.Entity("SD_330_F22SD_Assignment_1.Models.Episode", b =>
                {
                    b.HasOne("SD_330_F22SD_Assignment_1.Models.Podcast", "Podcast")
                        .WithMany("Episodes")
                        .HasForeignKey("PodcastId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Podcast");
                });

            modelBuilder.Entity("SD_330_F22SD_Assignment_1.Models.GuestArtist", b =>
                {
                    b.HasOne("SD_330_F22SD_Assignment_1.Models.Episode", "Episode")
                        .WithMany("GuestArtists")
                        .HasForeignKey("EpisodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SD_330_F22SD_Assignment_1.Models.Artist", "Artist")
                        .WithMany("GuestsArtists")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Episode");
                });

            modelBuilder.Entity("SD_330_F22SD_Assignment_1.Models.ListenersListPodcast", b =>
                {
                    b.HasOne("SD_330_F22SD_Assignment_1.Models.ListenersList", "ListenersList")
                        .WithMany("ListenerslistsPodcasts")
                        .HasForeignKey("ListenersListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ListenersList");
                });

            modelBuilder.Entity("SD_330_F22SD_Assignment_1.Models.PlaylistSong", b =>
                {
                    b.HasOne("SD_330_F22SD_Assignment_1.Models.Playlist", "Playlist")
                        .WithMany("PlaylistSongs")
                        .HasForeignKey("PlaylistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SD_330_F22SD_Assignment_1.Models.Song", "Song")
                        .WithMany("PlaylistSongs")
                        .HasForeignKey("SongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Playlist");

                    b.Navigation("Song");
                });

            modelBuilder.Entity("SD_330_F22SD_Assignment_1.Models.Podcast", b =>
                {
                    b.HasOne("SD_330_F22SD_Assignment_1.Models.ListenersListPodcast", "ListenerslistPodcast")
                        .WithMany("Podcasts")
                        .HasForeignKey("ListenersListPodcastId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ListenerslistPodcast");
                });

            modelBuilder.Entity("SD_330_F22SD_Assignment_1.Models.PodcastArtist", b =>
                {
                    b.HasOne("SD_330_F22SD_Assignment_1.Models.Artist", "Artist")
                        .WithMany("PodcastsArtists")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SD_330_F22SD_Assignment_1.Models.Podcast", "Podcast")
                        .WithMany("PodcastArtists")
                        .HasForeignKey("PodcastId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Podcast");
                });

            modelBuilder.Entity("SD_330_F22SD_Assignment_1.Models.Song", b =>
                {
                    b.HasOne("SD_330_F22SD_Assignment_1.Models.Album", "Album")
                        .WithMany("Songs")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");
                });

            modelBuilder.Entity("SD_330_F22SD_Assignment_1.Models.Album", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("SD_330_F22SD_Assignment_1.Models.Artist", b =>
                {
                    b.Navigation("ArtistSongs");

                    b.Navigation("GuestsArtists");

                    b.Navigation("PodcastsArtists");
                });

            modelBuilder.Entity("SD_330_F22SD_Assignment_1.Models.Episode", b =>
                {
                    b.Navigation("GuestArtists");
                });

            modelBuilder.Entity("SD_330_F22SD_Assignment_1.Models.ListenersList", b =>
                {
                    b.Navigation("ListenerslistsPodcasts");
                });

            modelBuilder.Entity("SD_330_F22SD_Assignment_1.Models.ListenersListPodcast", b =>
                {
                    b.Navigation("Podcasts");
                });

            modelBuilder.Entity("SD_330_F22SD_Assignment_1.Models.Playlist", b =>
                {
                    b.Navigation("PlaylistSongs");
                });

            modelBuilder.Entity("SD_330_F22SD_Assignment_1.Models.Podcast", b =>
                {
                    b.Navigation("Episodes");

                    b.Navigation("PodcastArtists");
                });

            modelBuilder.Entity("SD_330_F22SD_Assignment_1.Models.Song", b =>
                {
                    b.Navigation("PlaylistSongs");
                });
#pragma warning restore 612, 618
        }
    }
}
